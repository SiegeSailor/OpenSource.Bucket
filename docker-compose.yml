x-general: &general
  DEFAULT_REGION: ${AWS_DEFAULT_REGION}

networks:
  bridge:
    driver: bridge

services:
  flask:
    build: .
    command: flask run --host=0.0.0.0 --port=5000 --debug
    networks:
      - bridge
    volumes:
      - ./source/:/source/
    environment:
      <<: [*general]
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      AWS_CLOUDWATCH_LOGS_ENDPOINT: ${AWS_CLOUDWATCH_LOGS_ENDPOINT}
      AWS_CLOUDWATCH_LOGS_LOG_GROUP: ${AWS_CLOUDWATCH_LOGS_LOG_GROUP}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      FLASK_APP: main
      FLASK_ENV: ${ENVIRONMENT}
    ports:
      - 5001:5000
    depends_on:
      localstack:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:5000"]

  localstack:
    image: localstack/localstack
    networks:
      - bridge
    volumes:
      - "./volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      <<: [*general]
      ACTIVATE_PRO: 0
      DEBUG: 1
      DOCKER_HOST: unix:///var/run/docker.sock
      DOCKER_SOCK: /var/run/docker.sock
      EDGE_PORT: 4566
      LOCALSTACK_AUTH_TOKEN: ${LOCALSTACK_AUTH_TOKEN}
      PERSISTENCE: 1
      SERVICES: s3,logs
      SNAPSHOT_FLUSH_INTERVAL: 15
      SNAPSHOT_LOAD_STRATEGY: ON_REQUESTED
      SNAPSHOT_SAVE_STRATEGY: SCHEDULED
    ports:
      - 4566:4566
      - 4510-4559:4510-4559
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:4566"]
